/*doc
---
title: Pagination
name: uiPager
category: UI Components
---
Please review the pagination markup examples carefully;
the markup patterns presented here encourage accessibility.

Unicode arrows are for demonstration only; in production,
use a suitable SVG icon for "previous" and "next" controls.

```html_example
<ul role="navigation" class="pagination">
	<li class="pagination-page pagination-page--control">
		<span class="visibility--a11yHide">No previous pages</span>
	</li>
	<li class="pagination-page">
		<a href="#" class="page-label"><span class="visibility--a11yHide">Page </span>1</a>
	</li>
	<li class="pagination-page pagination-page--current">
		<span class="page-label">2 <em class="visibility--a11yHide">Current page</em></span>
	</li>
	<li class="pagination-page">
		<a href="#" class="page-label"><span class="visibility--a11yHide">Page </span>3</a>
	</li>
	<li class="pagination-page">
		<a href="#" class="page-label"><span class="visibility--a11yHide">Page </span>4</a>
	</li>
	<li class="pagination-page pagination-page--control">
		<a href="#" class="page-label" rel="next">→</a>
	</li>
</ul>

<ul role="navigation" class="pagination">
	<li class="pagination-page pagination-page--control">
		<a href="#" class="page-label" rel="prev">←</a>
	</li>
	<li class="pagination-page">
		<a href="#" class="page-label"><span class="visibility--a11yHide">Page </span>6</a>
	</li>
	<li class="pagination-page">
		<a href="#" class="page-label"><span class="visibility--a11yHide">Page </span>7</a>
	</li>
	<li class="pagination-page pagination-page--current">
		<span class="page-label">8 <em class="visibility--a11yHide">Current page</em></span>
	</li>
	<li class="pagination-page">
		<a href="#" class="page-label"><span class="visibility--a11yHide">Page </span>9</a>
	</li>
	<li class="pagination-page pagination-page--control">
		<a href="#" class="page-label" rel="next">→</a>
	</li>
</ul>

<ul role="navigation" class="pagination">
	<li class="pagination-page pagination-page--control">
		<a href="#" class="page-label" rel="prev">←</a>
	</li>
	<li class="pagination-page">
		<a href="#" class="page-label"><span class="visibility--a11yHide">Page </span>10</a>
	</li>
	<li class="pagination-page">
		<a href="#" class="page-label"><span class="visibility--a11yHide">Page </span>11</a>
	</li>
	<li class="pagination-page">
		<a href="#" class="page-label"><span class="visibility--a11yHide">Page </span>12</a>
	</li>
	<li class="pagination-page pagination-page--current">
		<span class="page-label">13 <em class="visibility--a11yHide">Current page</em></span>
	</li>
	<li class="pagination-page pagination-page--control">
		<span class="visibility--a11yHide">End of pages</span>
	</li>
</ul>
```

## Page item variants
A class of `pagination-page` is **required** for pagination list items. The following
classes are optional variants:

Class                        | Description
---------------------------- | ------------------------------------------------------------
`.pagination-page--current`  | used to indicate current page
`.pagination-page--control`  | used to indicate the page item as a "previous" or "next" control
*/

$_bpPagination: medium;

.pagination {
	@extend %list--reset;
	@extend %chunk;
	@extend %align--center;
	@include flexParent('row');
	@include justify-content(space-around);
}

.pagination-page {
	min-width: $media-s;

	// set even distribution of space for all items
	@include flex-grow(0);
	@include flex-shrink(0);

	// for vertical text alignment of `page-label`
	@include align-items(center);
	@include justify-content(center);

	// hide all items by default on small sizes;
	display: none;
	@include atMediaUp($_bpPagination) {
		@include display(flex);
	}
}

.pagination-page--current,
.pagination-page--control {
	// always show the current page
	// and prev/next controls
	@include display(flex);
}

.page-label {
	@extend %buttonBase;
	color: $C_textSecondary;
	padding: 0;
	min-width: $media-s;
	min-height: $media-s;
	font-weight: $W_bold;
	border-radius: $media-xl;
	border-width: 0;

	&:hover,
	&:active {
		color: $C_textPrimary;
		background: $C_lightGray;
	}

	.inverted & {
		@include color-all($C_textSecondaryInverted);
	}

	@include atMediaUp($_bpPagination) {
		.pagination-page--current & {
			color: $C_textPrimaryInverted;
			background: $C_contentBGInverted;
		}
	}
}


