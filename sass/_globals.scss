/*doc
---
title: Vendor Prefixing
name: globPrefixer
category: Sass Globals
---

## Bourbon prefixer mixin
The [prefixer](http://bourbon.io/docs/#prefixer) mixin
from [Broubon](http://bourbon.io/) accepts an argument
that determines which vendor prefixes to output.

For convenience, Sassquatch2 defines two global variables
for this argument:

Variable                | Value
----------------------- | --------------------------------
`$prefixes`             | `webkit ms spec`
`$prefixes-edge`        | `ms spec`


## Broubon global prefixer
The [global prefixer](http://bourbon.io/docs/#global-prefixer) in
Bourbon is used for property mixins like `transform()`. In Sassquatch2,
we use the following variables to explicitly set the global prefixer
defaults:

Variable                | Value
----------------------- | --------------------------------
`$prefix-for-webkit`     | `true`
`$prefix-for-mozilla`    | `false`
`$prefix-for-microsoft`  | `true`
`$prefix-for-opera`      | `false`
`$prefix-for-spec`       | `true`

*/

// prefixer mixin arg aliases
$prefixes: webkit ms spec;
$prefixes-edge: ms spec;

// broubon global prefixer settings
$prefix-for-webkit:    true;
$prefix-for-mozilla:   false;
$prefix-for-microsoft: true;
$prefix-for-opera:     false;
$prefix-for-spec:      true;



/*doc
---
title: Typography
name: globType
category: Sass Globals
---

## Font sizes

Variable                 | Value
------------------------ | --------------------------------
`$font-size-small`       | `13px`
`$font-size`             | `16px`
`$font-size-headline`    | `20px`
`$font-size-display2`    | `28px`
`$font-size-display1`    | `56px`


## Font weights

Variable                | Value
----------------------- | --------------------------------
`$W_normal`              | `400`
`$W_medium`              | `500`
`$W_bold`                | `700`


## Leading

Variable                | Value
----------------------- | --------------------------------
`$line-height`          | `1.25`
`$line-height-small`    | `1.25`

*/
$font : "Whitney", helvetica, arial, sans-serif;
$font--mono : Monaco, "Andale Mono", "Courier New", monospace;

// Sizes
$font-size-small    : 13px;
$font-size          : 16px;
$font-size-headline : 20px;
$font-size-display2 : 28px;
$font-size-display1 : 56px;

// Weights
$W_normal : 400;
$W_medium : 500;
$W_bold   : 700;

// Leading
$line-height       : 1.25;
$line-height-small : 1;


/*doc
---
title: Size scale
name: globScale
category: Sass Globals
---
We use a double-stranded
[modular scale](http://alistapart.com/article/more-meaningful-typography)
loosely based on a perfect-fifths scale.

```
$block   : 48px @ 1:1.5
$space   : 16px @ 1:1.5
```

_See also: ["Don't compose without a scale"](http://webtypography.net/3.1.1)_
*/

/*doc
---
title: Block
name: globBlock
parent: globScale
---
"Block" variables contain size values in pixels starting from
`48px`, moving up the `1:1.5` type scale.

These sizes represent one strand of our double-stranded type scale.

Variable                | Value
----------------------- | --------------------------------
`$block`                | `48px`
`$block-2`              | `72px`
`$block-3`             | `108px`
`$block-4`             | `160px`
`$block-5`             | `240px`
`$block-6`             | `384px`
`$block-7`             | `544px`
*/
$block           : 48px;
$block-2         : 72px;
$block-3         : 108px;
$block-4         : 160px;
$block-5         : 240px;
$block-6         : 384px;
$block-7         : 544px;

/*doc
---
title: Space
name: globSpace
parent: globScale
---
"Space" variables contain size values in pixels starting from
`16px`, moving up the `1:1.5` type scale.

These sizes represent one strand of our double-stranded type scale.

Variable                | Value
----------------------- | --------------------------------
`$space`                | `16px`
`$space-2`             | `24px`
`$space-3`             | `36px`
`$space-4`             | `56px`
`$space-5`             | `80px`
`$space-6`             | `120px`
`$space-7`             | `184px`
`$space-8`             | `280px`
*/
$space           : 16px;
$space-2         : 24px;
$space-3         : 36px;
$space-4         : 56px;
$space-5         : 80px;
$space-6         : 120px;
$space-7         : 184px;
$space-8         : 280px;

$space-and-half  : $space*1.5;
$space-double    : $space*2;
$space-half      : $space/2;
$space-quarter   : $space/4;


/*doc
---
title: Media
name: globMedia
parent: globScale
---
Elements like images, icons, avatars, and illustrations
can be thought of as "media". The following variables
set media sizes based on our modular scale:

Variable                | Value
----------------------- | --------------------------------
`$media-xs`              | `$space-2` (`24px`)
`$media-s`               | `$space-3` (`36px`)
`$media-m`               | `$block`   (`48px`)
`$media-l`               | `$block-2` (`72px`)
`$media-xl`              | `$block-4` (`160px`)

```
$media-map: (
	xs: $media-xs,
	s: $media-s,
	m: $media-m,
	l: $media-l,
	xl: $media-xl
);
```
*/
$media-xs : $space-2; // 24px
$media-s  : $space-3; // 36px
$media-m  : $block;   // 48px
$media-l  : $block-2; // 72px
$media-xl : $block-4; // 160px

$media-map: (
	xs: $media-xs,
	s: $media-s,
	m: $media-m,
	l: $media-l,
	xl: $media-xl
);


/*doc
---
title: Root classes
name: rootClasses
category: Sass Globals
---
"Root classes" are classes that we expect the
`html` or `body` elements to contain. These classes can be
used to target [specific languages](http://meetup.github.io/julep/#mixin-i18n-only),
[versions of IE](http://meetup.github.io/julep/#mixin-browser-lessThanIE),
and more.

Most root classes are defined in [Julep](http://meetup.github.io/julep/), our
custom Sass utility library. The root classes defined in Sassquatch2 are:

Variable                | Value                | Description
----------------------- | -------------------- | ---------------------------------
`$root-debugEnable`     | `'enableDebug'`      | Enables `.debug` styles
*/
$root-debugEnable: 'enableDebug';


/*doc
---
title: z-index
name: globZindex
category: Sass Globals
---
A map is provided for `z-index` values:

```
$zindex-map: (
	main: 0,
	main-header: 10,
	splitList-view: 15,
	shade: 20,
	shade-content: 25,
	modal: 30,
	modal-header: 40,
	popup: 50
);
```
*/
$zindex-map: (
	main: 0,
	main-header: 10,
	splitList-view: 15,
	shade: 20,
	shade-content: 25,
	modal: 30,
	modal-header: 40,
	popup: 50
);


/*doc
---
title: Forms
name: globForms
category: Sass Globals
---

Variable                | Value
----------------------- | --------------------------------
`$form-min-height`      | `$block`
`$form-min-width`       | `$block`
`$form-max-width`       | `$block-7`
`$inputGutter`          | `$space/2` - used in checkbox/radio gutters

*/
$form-min-height : $block;
$form-min-width  : $block;
$form-max-width  : $block-7;
$inputGutter: $space/2;

// TODO: replace with bourbon vars
$inputs-list: 'input[type="email"]',
				  'input[type="number"]',
				  'input[type="password"]',
				  'input[type="search"]',
				  'input[type="tel"]',
				  'input[type="text"]',
				  'input[type="url"]',

				  // Webkit & Gecko may change the display of these in the future
				  'input[type="color"]',
				  'input[type="date"]',
				  'input[type="datetime"]',
				  'input[type="datetime-local"]',
				  'input[type="month"]',
				  'input[type="time"]',
				  'input[type="week"]';

$unquoted-inputs-list: ();

@each $input-type in $inputs-list {
  $unquoted-inputs-list: append($unquoted-inputs-list, unquote($input-type), comma);
}
$all-text-inputs: $unquoted-inputs-list;




/*doc
---
title: Layout
name: globLayout
category: Sass Globals
---

## Views

Variable                     | Value
---------------------------- | --------------------------------
`$view-minWidth`             | `320px`
`$view-head-height`          | `56px`
`$view-head-height-tablet`   | `64px`
`$modal-width`               | `440px`


## Bounds

Variable                | Value
----------------------- | --------------------------------
`$bounds-wide`          | `1100px`
`$bounds`               | `840px`


## Border radius

Variable                | Value
----------------------- | --------------------------------
`$defaultRadius`        | `3px`

*/
$view-minWidth: 320px;
$view-head-height: 56px;
$view-head-height-tablet: 64px;
$modal-width: 440px;
$bounds-wide: 1100px;
$bounds: 840px;
$defaultRadius: 3px;


//
// Private vars
//

// ---------------------------
// EXTENDED COLORS
// ---------------------------
// TODO: move to swatches?
$C_accentDark            : darken($C_red, 8%);

// ---------------------------
// BUTTONS
// ---------------------------
	$btn-hover: lighten 10% !default;
	$btn-hover-opacity: opacify .1 !default;
	$btn-border: 1px solid !default;

// ---------------------------
// DISPLAY
// ---------------------------
	$display-values: (
		none,
		block,
		inline,
		inline-block
	);

// ---------------------------
// FLEXBOX
// ---------------------------
	$flexJustifyMap: ( // omits flex-start (default prop)
		"flexEnd": flex-end,
		"center": center,
		"spaceBetween": space-between,
		"spaceAround": space-around
	);
	$flexAlignMap: (
		"top": flex-start,
		"bottom": flex-end,
		"center": center
	);

