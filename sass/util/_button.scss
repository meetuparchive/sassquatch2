/*doc
---
title: Button utilities
name: button
category: Sass Utils | Mixins & Placeholders
---
*/


/*doc
---
title: Button personality placeholder
name: buttonPersonality
parent: button
---
Disables user-select, sets cursor, and resets text-decoration.

```
@extend %buttonPersonality;
```
*/
%buttonPersonality {
	@include user-select(none);
	cursor: pointer;
	text-decoration: none !important;
}

/*doc
---
title: Button base placeholder
name: buttonBasePlaceholder
parent: buttons
---
Applies base button styles

```
@extend %buttonBase;
```
*/
%buttonBase {
	@extend %buttonPersonality;
	@include display(inline-flex);
	@include flex-direction(column);
	@include justify-content(center);
	@include align-items(center);
	@include transition(background .15s);
	@include standardBorder(all);
	box-sizing: border-box;
	-webkit-appearance: none;
	border-radius: $defaultRadius;
	background: transparent;
	font-size: $font-size;
	font-weight: $W_medium;
	line-height: $line-height;
	min-height: $space-3;
	outline: 0;
	padding: 0 $space;
	vertical-align: middle;
}

/*doc
---
title: Button hover placeholder
name: buttonHoverPlaceholder
parent: buttons
---
Applies default button `:hover`,
`:active`, and `:focus` styles

```
// lightens "bgColor" on hover
@mixin buttonHover($bgColor: $C_textPrimary);
```
*/
@mixin buttonHover($bgColor: $C_textPrimary) {
	&:hover,
	&:focus {
		background: transparentize($bgColor, .8);
		border-color: transparent;
	}

	&:active {
		background: transparentize($bgColor, .75);
		border-color: transparent;
	}
}


/*doc
---
title: Button color mixin
name: buttonColorMixin
parent: button
---
Sets color properties for a button

```
.button--myOrangeButton {
	@include buttonColor(orange);
}
```
*/
@mixin buttonColor($bgColor: $C_button) {
	@include color-all(getPrimaryTextColor($bgColor), true);
	background: $bgColor;
	border-color: $bgColor;

	&:hover,
	&:focus {
			background: darken($bgColor, 8%);
	}

	&:active {
		background: darken($bgColor, 12%);
	}
}
